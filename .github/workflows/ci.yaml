name: Build, test, and publish a Docker image

on:
  push:
    branches: ['main']
    tags: ['v*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ukstv/x402-facilitator

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta_main.outputs.tags || steps.meta_tag.outputs.tags }}
      labels: ${{ steps.meta_main.outputs.labels || steps.meta_tag.outputs.labels }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Metadata (main)
        if: github.ref == 'refs/heads/main'
        id: meta_main
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
      - name: Metadata (release tag)
        if: startsWith(github.ref, 'refs/tags/v')
        id: meta_tag
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
  build-amd64:
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ needs.metadata.outputs.tags }}-amd64
          labels: ${{ needs.metadata.outputs.labels }}

#  build-and-push-image:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#      attestations: write
#      id-token: write
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Log in to GHCR
#        uses: docker/login-action@6d4b68b490aef8836e8fb5e50ee7b3bdfa5894f0
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Metadata (main branch)
#        if: github.ref == 'refs/heads/main'
#        id: meta_main
#        uses: docker/metadata-action@418e4b98bf2841bd337d0b24fe63cb36dc8afa55
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          tags: |
#            type=raw,value=latest
#
#      # Step 2: Metadata for release tag -> v1.2.3, v1.2, v1
#      - name: Metadata (release tag)
#        if: startsWith(github.ref, 'refs/tags/v')
#        id: meta_tag
#        uses: docker/metadata-action@418e4b98bf2841bd337d0b24fe63cb36dc8afa55
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          tags: |
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@e600775e527acba2317260cadb64b7e19efd5362
#
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
#        with:
#          context: .
#          push: true
#          platforms: linux/amd64,linux/arm64
#          tags: |
#            ${{ steps.meta_main.outputs.tags }}
#            ${{ steps.meta_tag.outputs.tags }}
#          labels: |
#            ${{ steps.meta_main.outputs.labels }}
#            ${{ steps.meta_tag.outputs.labels }}
#
#      - name: Generate artifact attestation
#        if: steps.meta_main.outputs.digest || steps.meta_tag.outputs.digest
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          subject-digest: ${{ steps.meta_main.outputs.digest || steps.meta_tag.outputs.digest }}
#          push-to-registry: true
