name: Build, test, and publish a Docker image

on:
  push:
    branches: ['main']
    tags: ['v*']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ukstv/x402-facilitator

jobs:
  metadata:
    name: Docker Metadata
    runs-on: ubuntu-24.04
    outputs:
      tags: ${{ steps.meta_main.outputs.tags || steps.meta_tag.outputs.tags }}
      labels: ${{ steps.meta_main.outputs.labels || steps.meta_tag.outputs.labels }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare Metadata (main)
        if: github.ref == 'refs/heads/main'
        id: meta_main
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
      - name: Prepare Metadata (release tag)
        if: startsWith(github.ref, 'refs/tags/v')
        id: meta_tag
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
  build-amd64:
    name: "Build (amd64)"
    runs-on: ubuntu-latest
    needs: metadata
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push amd64 image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          provenance: mode=max
          platforms: linux/amd64
          tags: ${{ needs.metadata.outputs.tags }}-amd64
          labels: ${{ needs.metadata.outputs.labels }}
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64
      - name: Generate image attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
  build-arm64:
    name: "Build (arm64)"
    runs-on: ubuntu-24.04-arm
    needs: metadata
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push arm64 image
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          context: .
          push: true
          provenance: mode=max
          platforms: linux/arm64
          tags: ${{ needs.metadata.outputs.tags }}-arm64
          labels: ${{ needs.metadata.outputs.labels }}
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},dest=/tmp/digest-arm64.txt
      - name: Generate image attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
  merge-manifest:
    name: Merge amd64 and arm64 Docker manifests
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64, metadata]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Merge all tags into multi-arch manifest
        run: |
          echo "Merging tags: ${{ needs.metadata.outputs.tags }}"
          IFS=',' read -ra FULL_TAGS <<< "${{ needs.metadata.outputs.tags }}"
          for full in "${FULL_TAGS[@]}"; do
            # Extract just the tag part from full ref (e.g., latest from ghcr.io/...:latest)
            tag="${full##*:}"
            echo "ðŸ”— Merging manifest for: $tag"
            docker buildx imagetools create \
              --tag ghcr.io/ukstv/x402-facilitator:$tag \
              ghcr.io/ukstv/x402-facilitator:$tag-amd64 \
              ghcr.io/ukstv/x402-facilitator:$tag-arm64
          done
